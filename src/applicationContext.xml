<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns="http://www.springframework.org/schema/beans" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop" 
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">
	<!-- 读取db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置c3p0(或者阿里巴巴)连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" ></property>
		<property name="driverClass" value="${jdbc.driverClass}" ></property>
		<property name="user" value="${jdbc.user}" ></property>
		<property name="password" value="${jdbc.password}" ></property>
	</bean>
	<!-- 核心事务管理器 -->
	<bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager" >
		<property name="sessionFactory" ref="sessionFactory" ></property>
	</bean>
	
	<!-- 配置通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置将通知织入目标对象
				配置切点
				配置切面 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.star.service.impl.*ServiceImpl.*(..))" id="txPc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc" />
	</aop:config>
	
	<!-- spring与hibernate进行整合
		最重要的就是将sessionFactory交给spring进行管理 -->
	<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 将连接池配置到sessionFactory -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 在Spring容器中重新配置hibernate基本信息 -->
		<property name="hibernateProperties">
			<props>
				<!--  必选配置 -->
			    <!-- <prop key="hibernate.connection.driver_class" >com.mysql.jdbc.Driver</prop>
				<prop key="hibernate.connection.url" >jdbc:mysql:///crm_32</prop>
				<prop key="hibernate.connection.username" >root</prop>
				<prop key="hibernate.connection.password" >0000</prop> -->
				<prop key="hibernate.dialect" >org.hibernate.dialect.MySQLDialect</prop>
				
				<!--  可选配置 -->
				<prop key="hibernate.show_sql" >true</prop>
				<prop key="hibernate.format_sql" >true</prop>
				<prop key="hibernate.hbm2ddl.auto" >update</prop>
			</props>
		</property>
		<!-- 将domain类的hibernate配置文件(称之为元数据,花里胡哨)引入进来
			直接配置路径,二货spring会自动进行扫描 -->
		<property name="mappingDirectoryLocations" value="classpath:com/star/domain"></property>
	</bean>
	
	<!-- action在spring中的配置 
		作用域一定是多例的(这样才符合struts2架构,每次都创建一个实例)-->	
	<bean name="userAction" class="com.star.web.action.UserAction" scope="prototype">
		<property name="userService" ref="userService"></property>
	</bean>
	<bean name="supplierAction" class="com.star.web.action.SupplierAction" scope="prototype">
		<property name="supplierService" ref="supplierService"></property>
	</bean>
	<bean name="baseDictAction" class="com.star.web.action.BaseDictAction" scope="prototype">
		<property name="baseDictService" ref="baseDictService"></property>
	</bean>
	<bean name="linkManAction" class="com.star.web.action.LinkManAction" scope="prototype">
		<property name="linkManService" ref="linkManService"></property>
	</bean>
	<bean name="saleOrderAction" class="com.star.web.action.SaleOrderAction" scope="prototype">
		<property name="saleOrderService" ref="saleOrderService"></property>
	</bean>
	
	<!-- service在spring中的配置 -->
	<bean name="userService" class="com.star.service.impl.UserServiceImpl" >
		<property name="userDAO" ref="userDAO" ></property>
	</bean>
	<bean name="supplierService" class="com.star.service.impl.SupplierServiceImpl" >
		<property name="supplierDAO" ref="supplierDAO" ></property>
	</bean>
	<bean name="baseDictService" class="com.star.service.impl.BaseDictServiceImpl" >
		<property name="baseDictDAO" ref="baseDictDAO" ></property>
	</bean>
	<bean name="linkManService" class="com.star.service.impl.LinkManServiceImpl" >
		<property name="linkManDAO" ref="linkManDAO" ></property>
	</bean>
	<bean name="saleOrderService" class="com.star.service.impl.SaleOrderServiceImpl" >
		<property name="saleOrderDAO" ref="saleOrderDAO" ></property>
	</bean>
	
	<!-- dao在spring中的配置 -->
	<bean name="userDAO" class="com.star.dao.impl.UserDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="supplierDAO" class="com.star.dao.impl.SupplierDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="baseDictDAO" class="com.star.dao.impl.BaseDictDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="linkManDAO" class="com.star.dao.impl.LinkManDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="saleOrderDAO" class="com.star.dao.impl.SaleOrderDAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
</beans>